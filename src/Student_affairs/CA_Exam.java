/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Student_affairs;

import MainApp.Utility;
import dbconnect.DB_OPS;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author sogobanjo
 */
public class CA_Exam extends javax.swing.JDialog {

    /**
     * Creates new form CA_Exam
     */

    DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
    String Exam_type;
    
    private void disable_contorls()
    {
//        comboSession1.setEnabled(false);
        comboTerm.setEnabled(false);
        comboClass.setEnabled(false);
        comboSubject.setEnabled(false);
        ComboAcademicSession.setEnabled(false);
        ComboExamDate.setEnabled(false);
        TxtScore.setEnabled(false);
        ButtonSaveScore.setEnabled(false);
    }
    
    
    public CA_Exam(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        disable_contorls();
        
         DB_OPS ops = new DB_OPS();
        ops.createConnection();
        String stmt;
        ResultSet Rset;
        // ACADEMIC SESSION DROP DOWN
//        String stmt ="select name from academic_session";
//        ResultSet Rset = ops.sel_data(stmt);
//        comboSession1.removeAllItems();
//        comboSession1.addItem("Select a Session");
//        fill_list(comboSession1,Rset);
        
        
        // ACADEMIC TERM DROP DOWN
//        stmt ="select name from term";
//        Rset = ops.sel_data(stmt);
//        comboTerm.removeAllItems();
//        comboTerm.addItem("Select a Term");
//        fill_list(comboTerm,Rset);

        // CLASS DROP DOWN
//        stmt ="select name from class";
//        Rset = ops.sel_data(stmt);
//        comboClass.removeAllItems();
//        comboClass.addItem("Select a Class");
//        fill_list(comboClass,Rset);
        
        
                // SUBJECT DROP DOWN
//        stmt ="select name from subject";
//        Rset = ops.sel_data(stmt);
//        comboSubject.removeAllItems();
//        comboSubject.addItem("Select a Subject");
//        fill_list(comboSubject,Rset);
        
        
        
            // EXAM DATE DROP DOWN
//        stmt ="select exam_date from ca_exam_setup";
//        Rset = ops.sel_data(stmt);
//        ComboExamDate.removeAllItems();
//        ComboExamDate.addItem("Select an Exam Date");
//        fill_list(ComboExamDate,Rset);
        
        
        
        
        
         ops.close_conn();
       
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        comboTerm = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        comboClass = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listStudentName = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();
        jRadioCA = new javax.swing.JRadioButton();
        jRadioExam = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        ButtonSaveScore = new javax.swing.JButton();
        TxtScore = new javax.swing.JFormattedTextField();
        comboSubject = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        ComboExamDate = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        ComboAcademicSession = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        Max_Score_Label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Continuous Assessment OR Exam");

        jLabel2.setText("Exam  Date");

        jLabel5.setText("Term");

        comboTerm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboTerm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTermActionPerformed(evt);
            }
        });

        jLabel6.setText("Class");

        comboClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClassActionPerformed(evt);
            }
        });

        jLabel9.setText("Student Name");

        listStudentName.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listStudentName.setToolTipText("");
        listStudentName.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listStudentNameValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listStudentName);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Please Select Student");

        buttonGroup1.add(jRadioCA);
        jRadioCA.setText("Continuous Assessment");
        jRadioCA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioCAActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioExam);
        jRadioExam.setText("Exam");
        jRadioExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioExamActionPerformed(evt);
            }
        });

        jLabel3.setText("Score");

        ButtonSaveScore.setText("Save Score");
        ButtonSaveScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSaveScoreActionPerformed(evt);
            }
        });

        TxtScore.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##0.##"))));

        comboSubject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSubjectActionPerformed(evt);
            }
        });

        jLabel7.setText("Subject");

        ComboExamDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboExamDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboExamDateActionPerformed(evt);
            }
        });

        jLabel8.setText("Academic Session");

        ComboAcademicSession.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboAcademicSession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboAcademicSessionActionPerformed(evt);
            }
        });

        jLabel4.setText("Out Of");

        Max_Score_Label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboExamDate, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboAcademicSession, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ButtonSaveScore, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(TxtScore, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(Max_Score_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26))))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioCA, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioExam, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboClass, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel7)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioCA)
                    .addComponent(jRadioExam))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboAcademicSession, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboClass, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(comboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboExamDate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(Max_Score_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TxtScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGap(20, 20, 20)
                .addComponent(ButtonSaveScore, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void fill_Session_combo()
    {
                  // ACADEMIC SESSION DROP DOWN
         DB_OPS ops = new DB_OPS();
        ops.createConnection();

        String stmt ="select distinct name " +
                          " from academic_session where id in (select distinct academic_session_id from ca_exam_setup where exam_setup_type = '" + Exam_type + "')" ;
        ResultSet Rset = ops.sel_data(stmt);
        ComboAcademicSession.removeAllItems();
        ComboAcademicSession.addItem("Select Academic Session");
        fill_list(ComboAcademicSession,Rset);

        ops.close_conn();

    }
    
    
    private void fill_Term_combo()
    {
                  // ACADEMIC SESSION DROP DOWN
         DB_OPS ops = new DB_OPS();
        ops.createConnection();

        String stmt ="select distinct name " +
                          " from term where id in (select distinct academic_term_id from ca_exam_setup where exam_setup_type = '" + Exam_type + "' " +
                 " and academic_session_id = (select id from academic_session where name = '" + ComboAcademicSession.getSelectedItem() + "') )" ;
        
        ResultSet Rset = ops.sel_data(stmt);
        comboTerm.removeAllItems();
        comboTerm.addItem("Select Academic Term");
        fill_list(comboTerm,Rset);

        ops.close_conn();

    }
    
    private void fill_Class_combo()
    {
                  // ACADEMIC SESSION DROP DOWN
         DB_OPS ops = new DB_OPS();
        ops.createConnection();

        String stmt ="select distinct name " +
                          " from class where id in (select distinct class_id from ca_exam_setup where exam_setup_type = '" + Exam_type + "' " +
                 " and academic_session_id = (select id from academic_session where name = '" + ComboAcademicSession.getSelectedItem() + "') " +
                " and academic_term_id = (select id from term where name = '" + comboTerm.getSelectedItem() + "') )" ;
        
        ResultSet Rset = ops.sel_data(stmt);
        comboClass.removeAllItems();
        comboClass.addItem("Select Class");
        fill_list(comboClass,Rset);

        ops.close_conn();

    }

    private void fill_Subject_combo()
    {
                  // ACADEMIC SESSION DROP DOWN
         DB_OPS ops = new DB_OPS();
        ops.createConnection();

        String stmt ="select distinct name " +
                          " from subject where id in (select distinct subject_id from ca_exam_setup where exam_setup_type = '" + Exam_type + "' " +
                 " and academic_session_id = (select id from academic_session where name = '" + ComboAcademicSession.getSelectedItem() + "') " +
                " and academic_term_id = (select id from term where name = '" + comboTerm.getSelectedItem() + "') " +
                " and class_id = (select id from class where name = '" + comboClass.getSelectedItem() + "') )" ;
        
        ResultSet Rset = ops.sel_data(stmt);
        comboSubject.removeAllItems();
        comboSubject.addItem("Select Subject");
        fill_list(comboSubject,Rset);

        ops.close_conn();

    }

    private void fill_ExamDate_combo()
    {
                  // ACADEMIC SESSION DROP DOWN
         DB_OPS ops = new DB_OPS();
        ops.createConnection();

        String stmt ="select exam_date " +
                          " from ca_exam_setup where  exam_setup_type = '" + Exam_type + "' " +
                 " and academic_session_id = (select id from academic_session where name = '" + ComboAcademicSession.getSelectedItem() + "') " +
                " and academic_term_id = (select id from term where name = '" + comboTerm.getSelectedItem() + "') " +
                " and class_id = (select id from class where name = '" + comboClass.getSelectedItem() + "') " +
                " and subject_id = (select id from subject where name = '" + comboSubject.getSelectedItem() + "') " ;
        
        ResultSet Rset = ops.sel_data(stmt);
        ComboExamDate.removeAllItems();
        ComboExamDate.addItem("Select Subject");
        fill_list(ComboExamDate,Rset);

        ops.close_conn();

    }
    
    private void get_Max_Exam_Score()
    {
                  // ACADEMIC SESSION DROP DOWN
         DB_OPS ops = new DB_OPS();
        ops.createConnection();

        String stmt =" select score " +
                " from ca_exam_setup where  exam_setup_type = '" + Exam_type + "' " +
                " and academic_session_id = (select id from academic_session where name = '" + ComboAcademicSession.getSelectedItem() + "') " +
                " and academic_term_id = (select id from term where name = '" + comboTerm.getSelectedItem() + "') " +
                " and class_id = (select id from class where name = '" + comboClass.getSelectedItem() + "') " +
                " and subject_id = (select id from subject where name = '" + comboSubject.getSelectedItem() + "') " +
                " and exam_date = '" + ComboExamDate.getSelectedItem() + "' " ;
        
        try
        {
            ResultSet Rset = ops.sel_data(stmt);

            Rset.next();
            Max_Score_Label.setText(String.valueOf(Rset.getDouble(1)));
        }
        catch(Exception ex)
        {
            System.out.println(ex.getMessage());
        }
//        ComboExamDate.removeAllItems();
//        ComboExamDate.addItem("Select Subject");
//        fill_list(ComboExamDate,Rset);

        ops.close_conn();

    }
    
    private void fill_list(javax.swing.JComboBox JBox, ResultSet Rset)
    {
        try
        {
            
            while (Rset.next())
           {
               JBox.addItem(Rset.getString(1));
           }

        }
        catch(Exception ex)
        {
            
        }
    }
    
    
    private void refreshStudentsList()
    {
        String stmt ="select concat(COALESCE(first_name,' ') , ' ', COALESCE(middle_name,' ') , ' ', COALESCE(surname,' ') ) AS StudentName " +
                     " from register " +
                     " where id not in ( select student_id from ca_exam  where " +
                " exam_setup_id in (select id from ca_exam_setup where class_id = (select id from class where name = '" + comboClass.getSelectedItem() + "')" +
                " and academic_session_id = (select id from academic_session where name = '" + ComboAcademicSession.getSelectedItem() + "')" +
                " and academic_term_id = (select id from term where name = '" + comboTerm.getSelectedItem() + "') " +
                " and subject_id = (select id from subject where name = '" + comboSubject.getSelectedItem() + "') ) )";
     //        ResultSet Rset = ops.sel_data(stmt);
             System.out.println(stmt);

             Utility myutil = new Utility();
             myutil.fill_list(listStudentName, stmt);
             listStudentName.setEnabled(true);
        
    }
               
    private void LoadStudentNameList()
    {
//        if (comboSession1.getSelectedIndex() <=0)
//        {
//             JOptionPane.showMessageDialog(this,  " Please select a Session ");
//            return; 
//        }
        String stmt =" select concat(COALESCE(first_name,' ') , ' ', COALESCE(middle_name,' ') , ' ', COALESCE(surname,' ') ) AS StudentName " +
                     " from register where id in ( select student_id from student_to_subject  where " +
                " class_id = (select id from class where name = '" + comboClass.getSelectedItem() + "')" +
                " and academic_session_id = (select id from academic_session where name = '" + ComboAcademicSession.getSelectedItem() + "')" +
                " and term_id = (select id from term where name = '" + comboTerm.getSelectedItem() + "')" +
                " and subject_id = (select id from subject where name = '" + comboSubject.getSelectedItem() + "') )";
     //        ResultSet Rset = ops.sel_data(stmt);
      //       System.out.println(stmt);

             Utility myutil = new Utility();
             myutil.fill_list(listStudentName, stmt);
             listStudentName.setEnabled(true);
        
    }
           
          
         
      
                       
                       
           private void save_data()
    {
        
//        if (!(jRadioCA.isSelected() || jRadioExam.isSelected()))
//        {
//            JOptionPane.showMessageDialog(this,  " Please Select Continuous Assessment OR Exam");
//            return;
//        }
                String stmt;
        String value, present_status, absent_status;
//        stmt = "insert into ca_exam (exam_date, academic_session_id, academic_term_id, class_id, student_id,subject_id, score, exam_type) values ";
        stmt = "insert into ca_exam (exam_setup_id, student_id, score) values ";
       
       
        value="";
        
        // + jXDatePicker1.getDate().toGMTString()
        
//        df.format(jXDatePicker1.getDate());
            int i;
//            int[] sel_indices = ListSubjectPeriod.getSelectedIndices();
//            
//            for (period_loop = 0; period_loop < ListSubjectPeriod.getSelectedIndices().length; period_loop++)
//            {
//                for ( i = 0; i < listStudentName.getModel().getSize();i++)
//                {
//                    value += "('" +  df.format(jXDatePicker1.getDate()) + "', (select id from ca_exam_setup where name = '" + comboSession1.getSelectedItem() + "'), " +
//                            " (select id from term where name = '" + comboTerm.getSelectedItem() + "'), " +
//                            " (select id from class where name = '" + comboClass.getSelectedItem() + "') ," +
//                            " (select id from register where concat(COALESCE(first_name,' ') , ' ', COALESCE(middle_name,' ') , ' ', COALESCE(surname,' ') ) = '" + listStudentName.getSelectedValue() + "'), " +
//                            " (select id from subject where name = '" + comboSubject.getSelectedItem() + "'), " +
//                            TxtScore.getText() + ", '" + Exam_type + "'" +
//                            " )";

                value = " ( " + "(select id " +
                                  " from ca_exam_setup where  exam_setup_type = '" + Exam_type + "' " +
                         " and academic_session_id = (select id from academic_session where name = '" + ComboAcademicSession.getSelectedItem() + "') " +
                        " and academic_term_id = (select id from term where name = '" + comboTerm.getSelectedItem() + "') " +
                        " and class_id = (select id from class where name = '" + comboClass.getSelectedItem() + "') " +
                        " and subject_id = (select id from subject where name = '" + comboSubject.getSelectedItem() + "') " +
                        " and exam_date = '" + ComboExamDate.getSelectedItem() + "'), "  +
                        " (select id from register where concat(COALESCE(first_name,' ') , ' ', COALESCE(middle_name,' ') , ' ', COALESCE(surname,' ') ) = '" + listStudentName.getSelectedValue() + "'), " +
                        Double.parseDouble(TxtScore.getText()) +
                            " )";
               
        stmt += value;
        System.out.println(stmt);

         DB_OPS dbops = new DB_OPS();
        dbops.createConnection();

           // System.out.println(stmt);   // Print the SQL statement for debugging purpose
            dbops.in_data(stmt);      
            if(dbops.error_msg.trim().length()==0)
                JOptionPane.showMessageDialog(this,  " Score Successfuly Recorded");
            else
                JOptionPane.showMessageDialog(this, "Error Occured While Recording Score "  + dbops.error_msg);
               dbops.close_conn();

    }
                
                       
                       
                       
                       
          
          
    
    private void comboClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClassActionPerformed
        // TODO add your handling code here:
        if (comboClass.getSelectedIndex() > 0)
        {
            fill_Subject_combo();
            comboSubject.setEnabled(true);
        }
//        if (comboClass.getSelectedIndex() > 0)
//        {
////            if (day_of_the_week.getText().trim().length() == 0)
////            {
////                JOptionPane.showMessageDialog(this,  " Please Select Date ");        
////                return;
////            }
//
//           // LoadSubjectPeriod();
//            //LoadStudentNameList();
//        }
    }//GEN-LAST:event_comboClassActionPerformed

    private void jRadioCAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioCAActionPerformed
        // TODO add your handling code here:
        Exam_type = "CA";
        
        fill_Session_combo();
        ComboAcademicSession.setEnabled(true);      
        
    }//GEN-LAST:event_jRadioCAActionPerformed

    private void ButtonSaveScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSaveScoreActionPerformed
        // TODO add your handling code here:

       if ( TxtScore.getText().trim().length() ==0  )
       {
            JOptionPane.showMessageDialog(this,  " Please Enter Student Score");
           return;
       }                

        if ( Double.parseDouble(TxtScore.getText()) > Double.parseDouble(Max_Score_Label.getText() ) )
       {
            JOptionPane.showMessageDialog(this,  " Score Entered Cannot be More Than the Maximum Score");
           return;
       }
        save_data();
        refreshStudentsList();
        

    }//GEN-LAST:event_ButtonSaveScoreActionPerformed

    private void jRadioExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioExamActionPerformed
        // TODO add your handling code here:
                Exam_type = "EXAM";
                
                fill_Session_combo();

                 ComboAcademicSession.setEnabled(true); 

    }//GEN-LAST:event_jRadioExamActionPerformed

    private void ComboExamDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboExamDateActionPerformed
        // TODO add your handling code here:
        
        if (ComboExamDate.getSelectedIndex() > 0)  // Until the 2nd item in the drop down is selected because 1st item has index of 0 (that is Select a Date)
        {
            refreshStudentsList();
//            LoadStudentNameList();
            get_Max_Exam_Score();
//                DB_OPS ops = new DB_OPS();
//             ops.createConnection();
//
//
//            String stmt ="select name " 
//                          " from class where id = (select class_id from ca_exam_setup where exam_date = '" + ComboExamDate.getSelectedItem() + "')" ;
//          //        ResultSet Rset = ops.sel_data(stmt);
//                  System.out.println(stmt);
//
//              ResultSet  Rset = ops.sel_data(stmt);
//             comboClass.removeAllItems();
//             comboClass.addItem("Select a Class");
//             fill_list(comboClass,Rset);
//             comboClass.setEnabled(true); 
            
        }
         
    }//GEN-LAST:event_ComboExamDateActionPerformed

    private void ComboAcademicSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboAcademicSessionActionPerformed
        // TODO add your handling code here:
        if (ComboAcademicSession.getSelectedIndex() > 0)
        {
            fill_Term_combo();
            comboTerm.setEnabled(true);
        }
    }//GEN-LAST:event_ComboAcademicSessionActionPerformed

    private void comboTermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTermActionPerformed
        if (comboTerm.getSelectedIndex() > 0)
        {
            fill_Class_combo();
            comboClass.setEnabled(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTermActionPerformed

    private void comboSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSubjectActionPerformed
        // TODO add your handling code here:
        if (comboSubject.getSelectedIndex() > 0)
        {
            fill_ExamDate_combo();
            ComboExamDate.setEnabled(true);
        }
    }//GEN-LAST:event_comboSubjectActionPerformed

    private void listStudentNameValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listStudentNameValueChanged
        // TODO add your handling code here:
        TxtScore.setEnabled(true);
        ButtonSaveScore.setEnabled(true);

    }//GEN-LAST:event_listStudentNameValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CA_Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CA_Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CA_Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CA_Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CA_Exam dialog = new CA_Exam(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonSaveScore;
    private javax.swing.JComboBox<String> ComboAcademicSession;
    private javax.swing.JComboBox<String> ComboExamDate;
    private javax.swing.JLabel Max_Score_Label;
    private javax.swing.JFormattedTextField TxtScore;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> comboClass;
    private javax.swing.JComboBox<String> comboSubject;
    private javax.swing.JComboBox<String> comboTerm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioCA;
    private javax.swing.JRadioButton jRadioExam;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listStudentName;
    // End of variables declaration//GEN-END:variables
}
