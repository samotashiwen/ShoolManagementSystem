/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Student_affairs;

import MainApp.Utility;
import dbconnect.DB_OPS;
import global.GlobalVar;
import java.sql.Date;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import javax.swing.JOptionPane;

/**
 *
 * @author sogobanjo
 */
public class SubjectAttendance extends javax.swing.JDialog {

    /**
     * Creates new form SubjectAttendance
     */
    DateFormat df = new SimpleDateFormat("yyyy-MM-dd");

    public SubjectAttendance(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        
        
          DB_OPS ops = new DB_OPS();
        ops.createConnection();
        
        // ACADEMIC SESSION DROP DOWN
        String stmt ="select name from academic_session";
        ResultSet Rset = ops.sel_data(stmt);
        comboSession1.removeAllItems();
        comboSession1.addItem("Select a Session");
        fill_list(comboSession1,Rset);
        
        
        // ACADEMIC TERM DROP DOWN
        stmt ="select name from term";
        Rset = ops.sel_data(stmt);
        comboTerm.removeAllItems();
        comboTerm.addItem("Select a Term");
        fill_list(comboTerm,Rset);

        // CLASS DROP DOWN
        stmt ="select name from class";
        Rset = ops.sel_data(stmt);
        comboClass.removeAllItems();
        comboClass.addItem("Select a Class");
        fill_list(comboClass,Rset);
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        comboSession = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        comboSession1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        comboTerm = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        comboClass = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        day_of_the_week = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListSubjectPeriod = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listStudentName = new javax.swing.JList<>();
        CheckBoxStatus = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();

        jLabel3.setText("Session");

        comboSession.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboSession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSessionActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Date");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Subject Attendance");

        comboSession1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboSession1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSession1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Term");

        comboTerm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Class");

        comboClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClassActionPerformed(evt);
            }
        });

        jLabel7.setText("Day Of The Week");

        day_of_the_week.setEditable(false);

        jLabel8.setText("Period");

        ListSubjectPeriod.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(ListSubjectPeriod);

        jLabel9.setText("Student Name");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Please Select Students that were Present");

        listStudentName.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listStudentName);

        CheckBoxStatus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CheckBoxStatus.setSelected(true);
        CheckBoxStatus.setText("Present");
        CheckBoxStatus.setEnabled(false);
        CheckBoxStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBoxStatusActionPerformed(evt);
            }
        });

        jButton1.setText("Save Subject Attendance");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Session");

        jXDatePicker1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePicker1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboClass, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboTerm, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboSession1, javax.swing.GroupLayout.Alignment.TRAILING, 0, 391, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(91, 91, 91)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(59, 59, 59))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addComponent(jScrollPane2))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(day_of_the_week)
                                    .addComponent(jScrollPane1)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(CheckBoxStatus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboSession1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboTerm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboClass, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(day_of_the_week, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CheckBoxStatus)
                        .addGap(100, 100, 100))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
        
      private void fill_list(javax.swing.JComboBox JBox, ResultSet Rset)
    {
        try
        {
            
            while (Rset.next())
           {
               JBox.addItem(Rset.getString(1));
           }

        }
        catch(Exception ex)
        {
            
        }
    }
    
    
      
      
      
            
                    private void LoadSubjectPeriod()
    {
        String stmt ="select concat(from_time, ' - ', to_time)  AS Period " +
                     " from time_table_period where class_id = (select id from class where name = '" + comboClass.getSelectedItem() + "')" +
                " and term_id = (select id from term where name = '" + comboTerm.getSelectedItem() + "')"  +
                " and academic_session_id = (select id from academic_session where name = '" + comboSession1.getSelectedItem() + "')" +
                " and day_of_the_week = '" + day_of_the_week.getText() + "'" ;
     //        ResultSet Rset = ops.sel_data(stmt);
             System.out.println(stmt);

             Utility myutil = new Utility();
             myutil.fill_list(ListSubjectPeriod, stmt);
             ListSubjectPeriod.setEnabled(true);
        
    }
      
      
      
      
      
      
    private void save_data()
    {
                String stmt;
        String value, present_status, absent_status;
        stmt = "insert into subject_attendance (period_date, period_id, student_id, status) values ";
        
//        if (CheckBoxStatus.isSelected())
//        {
            present_status = "PRESENT";
            absent_status = "ABSENT";            
//        }
//        else
//        {
//            present_status = "PRESENT";
//            absent_status = "ABSENT";            
//        }
        
        value="";
        
        // + jXDatePicker1.getDate().toGMTString()
        
        df.format(jXDatePicker1.getDate());
            int i,period_loop;
            int[] sel_indices = ListSubjectPeriod.getSelectedIndices();
            
            for (period_loop = 0; period_loop < ListSubjectPeriod.getSelectedIndices().length; period_loop++)
            {
                for ( i = 0; i < listStudentName.getModel().getSize();i++)
                {
                    value += "('" +  df.format(jXDatePicker1.getDate()) + "', (select id from time_table_period where " +
                            " day_of_the_week = '" + day_of_the_week.getText() + "' " +
                            " and concat(from_time, ' - ', to_time) = '" + ListSubjectPeriod.getModel().getElementAt(sel_indices[period_loop])  + "' " +
                            " and academic_session_id = (select id from academic_session where name = '" + comboSession1.getSelectedItem() + "') " +
                            " and term_id = (select id from term where name = '" + comboTerm.getSelectedItem() + "') " +
                            " and class_id = (select id from class where name = '" + comboClass.getSelectedItem() + "') ),";

                    if (listStudentName.isSelectedIndex(i))
                    {

                        value += "(select id from register where concat(COALESCE(first_name,' ') , ' ', COALESCE(middle_name,' ') , ' ', COALESCE(surname,' ') ) = '" + listStudentName.getModel().getElementAt(i)+ "')," +
                                "'" + present_status + "'),";
                    }
                    else
                    {
                        value += "(select id from register where concat(COALESCE(first_name,' ') , ' ', COALESCE(middle_name,' ') , ' ', COALESCE(surname,' ') ) = '" + listStudentName.getModel().getElementAt(i) + "')," +
                                "'" + absent_status + "')";
                    }

               }
                
                               //Remove comma from the last select statement or put comma as long as it is not the last statement
                      if (period_loop != ListSubjectPeriod.getSelectedIndices().length -1)
                      {
                          value += ",";
                      }
            }
                
        stmt += value;
        System.out.println(stmt);

         DB_OPS dbops = new DB_OPS();
        dbops.createConnection();

           // System.out.println(stmt);   // Print the SQL statement for debugging purpose
            dbops.in_data(stmt);      
            if(dbops.error_msg.trim().length()==0)
                JOptionPane.showMessageDialog(this,  " Attendance Successfuly Inserted");
            else
                JOptionPane.showMessageDialog(this, "Error OCcured While Inserting Attendance "  + dbops.error_msg);
               dbops.close_conn();

    }
      
      
                    private void LoadStudentNameList()
    {
        String stmt ="select concat(COALESCE(first_name,' ') , ' ', COALESCE(middle_name,' ') , ' ', COALESCE(surname,' ') ) AS StudentName " +
                     " from register where class_id = (select id from class where name = '" + comboClass.getSelectedItem() + "')" +
                " and academic_session_id = (select id from academic_session where name = '" + comboSession1.getSelectedItem() + "')" ;
     //        ResultSet Rset = ops.sel_data(stmt);
             System.out.println(stmt);

             Utility myutil = new Utility();
             myutil.fill_list(listStudentName, stmt);
             listStudentName.setEnabled(true);
        
    }
    
      
    
    
    private void comboSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSessionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboSessionActionPerformed

    private void comboSession1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSession1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboSession1ActionPerformed

    private void comboClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClassActionPerformed
        // TODO add your handling code here:
        if (comboClass.getSelectedIndex() > 0)
        {
            if (day_of_the_week.getText().trim().length() == 0)
            {
                JOptionPane.showMessageDialog(this,  " Please Select Date ");
               return;
            }
            
            LoadSubjectPeriod();
            LoadStudentNameList();
        }

    }//GEN-LAST:event_comboClassActionPerformed

    private void CheckBoxStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBoxStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CheckBoxStatusActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            save_data();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jXDatePicker1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker1ActionPerformed
        // TODO add your handling code here:
            setDayofWeek();
//     System.out.println("Date : "  + df.format(jXDatePicker1.getDate()));

    }//GEN-LAST:event_jXDatePicker1ActionPerformed

    
private void setDayofWeek()
{
            String selected_day;

        selected_day = jXDatePicker1.getDate().toString();

        //       System.out.println(selected_day  +  "  " + selected_day.substring(0, 3));

        switch (selected_day.substring(0, 3))
        {
            case "Mon":
            {
                //       System.out.println(selected_day);
                day_of_the_week.setText("Monday");
                break;
            }
            case "Sun":
            {
                day_of_the_week.setText("Sunday");
                break;
            }
            case "Tue":
            {
                day_of_the_week.setText("Tuesday");
                break;
            }
            case "Wed":
            {
                day_of_the_week.setText("Wednesday");
                break;
            }
            case "Thu":
            {
                day_of_the_week.setText("Thursday");
                break;
            }
            case "Fri":
            {
                day_of_the_week.setText("Friday");
                break;
            }
            case "Sat":
            {
                day_of_the_week.setText("Saturday");
                break;
            }
        }

}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubjectAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubjectAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubjectAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubjectAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SubjectAttendance dialog = new SubjectAttendance(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckBoxStatus;
    private javax.swing.JList<String> ListSubjectPeriod;
    private javax.swing.JComboBox<String> comboClass;
    private javax.swing.JComboBox<String> comboSession;
    private javax.swing.JComboBox<String> comboSession1;
    private javax.swing.JComboBox<String> comboTerm;
    private javax.swing.JTextField day_of_the_week;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JList<String> listStudentName;
    // End of variables declaration//GEN-END:variables
}
