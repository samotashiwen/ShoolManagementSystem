/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Mapping;

import dbconnect.DB_OPS;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import global.GlobalVar;
import MainApp.Utility;
import javax.swing.DefaultListModel;

/**
 *
 * @author sogobanjo
 */
public class StudentToSubject extends javax.swing.JDialog {
    
            DB_OPS ops = new DB_OPS();

    
        private void disable_controls()
    {
        //comboSession.setEnabled(false);
        comboTerm.setEnabled(false);
        comboClass.setEnabled(false);
        listStudents.setEnabled(false);
        comboSubject.setEnabled(false);
        buttonMap.setEnabled(false);
    }
    
    

    /** Creates new form StudentToSubject */
    public StudentToSubject(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        disable_controls();
        
        ops.createConnection();
        String stmt;
        ResultSet Rset;
        // SUBJECT DROP DOWN
//        String stmt ="select name from subject";
//        ResultSet Rset = ops.sel_data(stmt);
//        comboSubject.removeAllItems();
//        fill_list(comboSubject,Rset);
        
        
        // ACADEMIC SESSION DROP DOWN
        stmt ="select name from academic_session";
        Rset = ops.sel_data(stmt);
        comboSession.removeAllItems();
        comboSession.addItem("Select a Session");
        fill_list(comboSession,Rset);
        
        
        
        // POPULATING THE LIST BOX FOR CLASS
//        stmt ="select name from class";
//        //ResultSet Rset = ops.sel_data(stmt);
//        Utility myutil = new Utility();
//        myutil.fill_list(listStudents, stmt);
        
        
        
          // ACADEMIC TERM DROP DOWN
//        stmt ="select name from term";
//        Rset = ops.sel_data(stmt);
//        comboTerm.removeAllItems();
//        comboTerm.addItem("Select a Term");
//        fill_list(comboTerm,Rset);
        
        
        
        
         ops.close_conn();
     
        
    }
    
    
    
       

    
        private void fill_list(javax.swing.JComboBox JBox, ResultSet Rset)
    {
        try
        {
            
            while (Rset.next())
           {
               JBox.addItem(Rset.getString(1));
           }

        }
        catch(Exception ex)
        {
            
        }
    }
    
    
    
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
        private void fill_Term_combo()
        {
            String stmt;
            ResultSet Rset;
            ops.createConnection();
            stmt ="select name from term";
            Rset = ops.sel_data(stmt);
            comboTerm.removeAllItems();
            comboTerm.addItem("Select a Term");
            fill_list(comboTerm,Rset);
            ops.close_conn();
        }
    
    
        private void fill_Class_combo()
    {
                  
         DB_OPS ops = new DB_OPS();
        ops.createConnection();

        String stmt ="select distinct name " +
                          " from class where id in (select distinct class_id from subject_to_class " +
                " where subject_id = (select id from subject where name = '" + comboSubject.getSelectedItem() + "') " +
                 " and academic_session_id = (select id from academic_session where name = '" + comboSession.getSelectedItem() + "')) " ; //+
//                " and academic_term_id = (select id from term where name = '" + comboTerm.getSelectedItem() + "') )" ;
        
//        System.out.println(stmt);
        ResultSet Rset = ops.sel_data(stmt);
        comboClass.removeAllItems();
        comboClass.addItem("Select Class");
        fill_list(comboClass,Rset);

        ops.close_conn();

    }
     
    
    private void fill_Subject_combo()
    {
        ops.createConnection();
        String stmt ="select name from subject";
        ResultSet Rset = ops.sel_data(stmt);
        comboSubject.removeAllItems();
        comboSubject.addItem("Select a Subject");
        fill_list(comboSubject,Rset);
        ops.close_conn();
    }
    
    
    
                   
    private void LoadStudentNameList()
    {
//        if (comboSession1.getSelectedIndex() <=0)
//        {
//             JOptionPane.showMessageDialog(this,  " Please select a Session ");
//            return; 
//        }
        String stmt ="select concat(COALESCE(first_name,' ') , ' ', COALESCE(middle_name,' ') , ' ', COALESCE(surname,' ') ) AS StudentName " +
                     " from register where class_id = (select id from class where name = '" + comboClass.getSelectedItem() + "')" +
                " and academic_session_id = (select id from academic_session where name = '" + comboSession.getSelectedItem() + "')" +
                " and term_id = (select id from term where name = '" + comboTerm.getSelectedItem() + "')" ;
     //        ResultSet Rset = ops.sel_data(stmt);
      //       System.out.println(stmt);

             Utility myutil = new Utility();
             myutil.fill_list(listStudents, stmt);
             listStudents.setEnabled(true);
        
    }
    
    
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        comboSubject = new javax.swing.JComboBox<>();
        buttonMap = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listStudents = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboSession = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        comboTerm = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        comboClass = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Map Student To Subject");

        jLabel1.setText("Subject");

        comboSubject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSubjectActionPerformed(evt);
            }
        });

        buttonMap.setText("Map");
        buttonMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMapActionPerformed(evt);
            }
        });

        listStudents.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listStudents);

        jLabel2.setText("Students");

        jLabel4.setText("Session");

        comboSession.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboSession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSessionActionPerformed(evt);
            }
        });

        jLabel5.setText("Term");

        comboTerm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboTerm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTermActionPerformed(evt);
            }
        });

        jLabel6.setText("Classes");

        comboClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboClassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(277, 277, 277))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7))
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(comboSession, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(comboTerm, javax.swing.GroupLayout.Alignment.LEADING, 0, 187, Short.MAX_VALUE)
                                                .addComponent(comboSubject, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(comboClass, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(103, 103, 103))))))
                    .addComponent(jLabel1))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(buttonMap)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboSession, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboClass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(buttonMap)
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMapActionPerformed
        // TODO add your handling code here:
        int sel_indices[];
        sel_indices = listStudents.getSelectedIndices();

        if ( sel_indices.length == 0)
        {

            //            app_util.MsgBox("Please Select at least a Table", "Configuration",this);
            JOptionPane.showMessageDialog(this, "Please Select at least a Student");
        }
        else
        {
            DB_OPS dbops = new DB_OPS();
            dbops.createConnection();

            DefaultListModel listModel = new DefaultListModel();

            String stmt = "insert into student_to_subject (academic_session_id, academic_term_id,  subject_id, class_id, student_id) " +
            " values ";
            String    part_stmt =  "((select id from academic_session where name = '" + comboSession.getSelectedItem() + "')," +
                "(select id from term where name = '" + comboTerm.getSelectedItem() + "')," +
                "(select id from subject where name = '" + comboSubject.getSelectedItem() + "')," +
                "(select id from class where name = '" + comboClass.getSelectedItem() + "')," ;
            for ( int i = 0; i < sel_indices.length; i++)
            {

                listModel.addElement(listStudents.getModel().getElementAt(sel_indices[i]));
                //         String stmt = "insert into subject_to_class (academic_session_id, subject_id, class_id) " +
                //                " values (" +
//                stmt +=  "((select id from academic_session where name = '" + comboSession.getSelectedItem() + "')," +
//                "(select id from term where name = '" + comboTerm.getSelectedItem() + "')," +
//                "(select id from subject where name = '" + comboSubject.getSelectedItem() + "')," +
//                "(select id from class where name = '" + comboClass.getSelectedItem() + "')," +
                stmt += part_stmt + " (select id from register where concat(COALESCE(first_name,' ') , ' ', COALESCE(middle_name,' ') , ' ', COALESCE(surname,' ')) = '" + listStudents.getModel().getElementAt(sel_indices[i]) + "')" +
                ")";
                
                //Remove comma from the last select statement
                if (i != sel_indices.length -1)
                {
                    stmt += ",";
                }

            }

            // System.out.println(stmt);   // Print the SQL statement for debugging purpose
            dbops.in_data(stmt);
            if(dbops.error_msg.trim().length()==0)
            JOptionPane.showMessageDialog(this,  " Successfuly Mapped");
            else
            JOptionPane.showMessageDialog(this, "Error OCcured While Mapping "  + dbops.error_msg);
            dbops.close_conn();

        }

    }//GEN-LAST:event_buttonMapActionPerformed

    private void comboTermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTermActionPerformed
        // TODO add your handling code here:
        if(comboTerm.getSelectedIndex() > 0)
        {
            fill_Subject_combo();
            comboSubject.setEnabled(true);
        }
    }//GEN-LAST:event_comboTermActionPerformed

    private void comboSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSessionActionPerformed
        // TODO add your handling code here:
        if (comboSession.getSelectedIndex() > 0)
        {
            fill_Term_combo();
            comboTerm.setEnabled(true);
        }
        
    }//GEN-LAST:event_comboSessionActionPerformed

    private void comboSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSubjectActionPerformed
        // TODO add your handling code here:
        
        if (comboSubject.getSelectedIndex() > 0)
        {
            fill_Class_combo();
            comboClass.setEnabled(true);
        }
        
    }//GEN-LAST:event_comboSubjectActionPerformed

    private void comboClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboClassActionPerformed
        // TODO add your handling code here:
        
        if (comboClass.getSelectedIndex() > 0)
        {
            LoadStudentNameList();
            listStudents.setEnabled(true);
            buttonMap.setEnabled(true);
            
        }
        
    }//GEN-LAST:event_comboClassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentToSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentToSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentToSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentToSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                StudentToSubject dialog = new StudentToSubject(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonMap;
    private javax.swing.JComboBox<String> comboClass;
    private javax.swing.JComboBox<String> comboSession;
    private javax.swing.JComboBox<String> comboSubject;
    private javax.swing.JComboBox<String> comboTerm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listStudents;
    // End of variables declaration//GEN-END:variables

}
